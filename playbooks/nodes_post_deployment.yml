- name: vm post deployment
  hosts: qbnodes
  become: yes
  gather_facts: yes
  vars_files:
    - vars/all.yml
    - vars/vault.yml

  tasks:
    - name: Generate IPA Session Cookie
      vars:
      uri:
        url: "https://{{ ipa_host }}/ipa/session/login_password"
        validate_certs: no
        method: POST
        status_code: 200
        headers:
          Content-Type: "application/x-www-form-urlencoded"
          Accept: "text/plain"
          Referer: "https://{{ ipa_host }}/ipa"
        body: "user={{ idm_admin_user }}&password={{ idm_admin_pwd }}"
      register: ipa_session
      delegate_to: localhost

    - name: Create A/PTR Records
      uri:
        url: "https://{{ ipa_host }}/ipa/session/json"
        validate_certs: no
        method: POST
        status_code: 200
        headers:
          Cookie: "{{ ipa_session.set_cookie }}"
          Accept: "application/json"
          Referer: "https://{{ ipa_host }}/ipa"
        body:
          method: dnsrecord_add
          params:
          - - "{{ domain }}."
            - "{{ hostvars[item].inventory_hostname }}"
          - a_part_ip_address: "{{ hostvars[item].ansible_host }}"
            a_extra_create_reverse: true
        body_format: json
      loop: "{{ groups ['qbnodes'] }}"
      loop_control:
        label: "{{ hostvars[item].inventory_hostname }}"
      delegate_to: localhost

    - name: declare post install file for {{ product }}
      set_fact:
        product_postinstall: "{{ 'ocp_nodes_postinstall.yml' if product == 'ocp' else 'okd_nodes_postinstall.yml' }}"

    - name: include post install for product {{ product }}
      include_tasks: "{{ product_postinstall }}"

    - name: install glusterfs-fuse when using gluster storage
      yum:
        name: glusterfs-fuse
      when: glusterfs

    - name: install glusterfs-server packages
      yum:
        name:
          - glusterfs-server
        state: present
      when: glusterfs and (ansible_hostname in groups['infra'] or 
                           ansible_hostname in groups['nodes']

    - name: update system when required packages are first installed
      yum:
        name: '*'
        state: latest
      when: node_pkgs_install.changed

    - name: create docker-storage-setup file
      copy:
        dest: "/etc/sysconfig/docker-storage-setup"
        content: |
          STORAGE_DRIVER=overlay2
          DEVS=/dev/vdb
          VG=docker-vg
      when: glusterfs and (ansible_hostname in groups['infra'] or 
                           ansible_hostname in groups['nodes'] or
                           ansible_hostname in groups['masters'])

    - name: Run docker-storage-setup
      command: docker-storage-setup
      when: glusterfs and (ansible_hostname in groups['infra'] or 
                           ansible_hostname in groups['nodes'] or
                           ansible_hostname in groups['masters'])
      tags: 
        - docker-storage

