---
######################################
#         USER VARIABLES             #
# The are autojatically updated or   #
# you can update them manually       #
######################################
inventory_dir: ""
project_dir: ""
admin_user: ""
domain: ""

# Public DNS server
dns_forwarder: ""

# ROLE: swygue-redhat-subscription
# whether to use username/pass or RHSM
rhsm_reg_method: ""

######################################
#         SYSTEM VARIABLES           #
# You shouldn't need to change these # 
######################################
instance_prefix: qbn
preappend_host_name: "{{ instance_prefix }}-{{ product }}-"
update_inventory: true
vm_data_dir: "/var/lib/vmdata"
inventory_file: "{{ inventory_dir }}/hosts"
admin_user_password: "{{ admin_user_password }}"
kvm_vm_root_pwd: "{{ admin_user_password }}"
vm_domain: "{{ domain }}"
search_domains:
  - "{{ vm_domain }}"
# This is for /etc/resolv.conf
dns_servers:
  - "{{ idm_server_ip | default('1.1.1.1') }}"
  - 8.8.8.8
ansible_repo: rhel-7-server-ansible-2.6-rpms
rhel_release: 7.6

# use by funciton check_hardware_resources
libvirt_pool_name: default

# ROLE: swygue-redhat-subscription
rhsm_org: "{{ rhsm_org }}"
rhsm_activationkey: "{{ rhsm_activationkey }}"
rhsm_org_id: "{{ rhsm_org }}"
rhsm_setup_insights_client: false
rhsm_user: "{{ rhsm_username }}"
rhsm_pass: "{{ rhsm_password }}"
org_id: "{{ rhsm_org }}"

# ROLE: swygue.edge_host_setup role
# the user that will admin the system
ssh_username: "{{ admin_user }}"

# ROLE: deploy-kvm-vm
#--------------------
# name of the libvirt network to use
vm_libvirt_net: "qubinet"
# Use to create VM
os_qcow_image_name: rhel-server-7.6-x86_64-kvm.qcow2

deployment_type: standard

# OpenShift VM info
openshift_product: ""
product: "{{ openshift_product }}"
openshift_user: qubinode
instances:
  - name: master
    enable: true
    vm_cpu: 4
    vm_memory: 16384
    vm_root_disk_size: 40G
    vm_recreate: false
    vm_teardown: false
    cluster_group: masters
    role_group: masters
    extra_storage:
      - size: 60G
        enable: true
    qty: 1
  - name: node
    enable: true
    vm_cpu: 4
    vm_memory: 16384
    vm_root_disk_size: 40G
    vm_teardown: false
    cluster_group: nodes
    role_group: computes
    extra_storage:
      - size: 60G
        enable: true
      - size: 160G
        enable: true
    vm_recreate: false
    qty: 2
  - name: infra
    enable: true
    vm_cpu: 4
    vm_memory: 16384
    vm_root_disk_size: 40G
    vm_teardown: false
    cluster_group: nodes
    role_group: infra
    extra_storage:
      - size: 60G
        enable: true
      - size: 160G
        enable: true
    vm_recreate: false
    qty: 2
  - name: lb
    enable: true
    vm_cpu: 2
    vm_memory: 8192
    vm_root_disk_size: 20G
    vm_teardown: false
    cluster_group: lbs
    role_group: lbs
    extra_storage: []
    vm_recreate: false
    qty: 0


ipa_client_principal: "{{ idm_admin_user }}"
ipa_client_pass: "{{ idm_dm_pwd }}"
ipa_host: "{{ idm_hostname }}.{{ domain }}"
ipa_client_install_flags: "--server='{{ ipa_host }}' --realm='{{ idm_realm }}' --mkhomedir --enable-dns-updates -N --domain='{{ domain }}'"
openshift_repo: rhel-7-server-ose-3.11-rpms
okd_repos:
  - rhel-7-server-rpms
  - rhel-7-server-optional-rpms
  - rhel-7-server-supplementary-rpms
  - rhel-7-server-extras-rpms
  - rhel-7-fast-datapath-rpms
ocp_repos:
  - rhel-7-server-rpms
  - rhel-7-server-optional-rpms
  - rhel-7-server-supplementary-rpms
  - rhel-7-server-extras-rpms
  - rhel-7-fast-datapath-rpms
  - "{{ openshift_repo }}"
  - "{{ ansible_repo }}"
ocp_gluster_client_repo:
  - rh-gluster-3-client-for-rhel-7-server-rpms
ocp_gluster_server_repo:
  - rh-gluster-3-for-rhel-7-server-rpms

ocp_repos_with_glus_client: "{{ ocp_repos + ocp_gluster_client_repo }}"
okd_repos_with_glus_client: "{{ okd_repos + ocp_gluster_client_repo }}"
ocp_repos_with_glus_server: "{{ ocp_gluster_server_repo + ocp_gluster_client_repo }}"

ocp_nodes_pkgs: "wget,git,net-tools,bind-utils,iptables-services,bridge-utils,bash-completion,kexec-tools,sos,psacct"

ocp_gluster_pkg: docker-1.13.1


 # LVM
logical_volumes:
  - name: qubi_images
    size: "+100%FREE"
    mount_dir: "{{ kvm_host_libvirt_dir | default('/var/lib/libvirt/images') }}"
    fstype: xfs
host_device: "{{ kvm_host_libvirt_extra_disk | default('nvme0n1') }}"
vg_name: vg_qubi


#################################
# KVM host / Qubinode variables #
#################################
# PTR
qubinode_ptr: changeme.in-addr.arpa

# set this variable to setup the system as a qubinode
run_qubinode_setup: ""

# set path to libvirt images
kvm_host_libvirt_dir: /var/lib/libvirt/images

# name of the bridge interface to create
qubinode_bridge_name: qubibr0

###########################################
# variables for swygue.edge_host_setup role


# should a bridge interface be created
configure_bridge: true

nat_network_name: "{{ cluster_name }}"
libvirt_host_networks:
  - name: "{{ nat_network_name }}"
    create: true
    mode: nat
    int_domain: compute.local
    external_domain: "{{ public_domain }}"
    mac_start: "52:54:00:"
    master_count: 3
    compute_count: 3
    subnet: "192.168.50.0"
    mask: "255.255.255.0"
  - name: "{{ vm_libvirt_net }}"
    create: true
    mode: bridge
    bridge_device: "{{ kvm_host_bridge_name | default(qubinode_bridge_name) }}"
    ifcfg_type: "{{ kvm_bridge_type }}"
    ifcfg_bootproto: "{{ kvm_host_bootproto }}"
    bridge_slave_dev: "{{ kvm_host_interface }}"
    gateway: "{{ kvm_host_gw }}"
    mask_prefix: "{{ kvm_host_mask_prefix }}"
    ipaddress: "{{ kvm_host_ip }}"
    mac: "{{ kvm_host_macaddr }}"

#This is for KVM host initial setup of /etc/resolv.conf
kvm_host_dns_server: "{{ idm_server_ip | default('1.1.1.1') }}"
kvm_host_ip: ""
kvm_host_interface: ""
kvm_host_gw: ""
kvm_host_netmask: ""
kvm_bridge_type: Bridge
kvm_host_bootproto: none
kvm_host_mask_prefix: ""
kvm_host_domain: "{{ domain }}"

libvirt_pkgs:
   - virt-install
   - libvirt-daemon-config-network
   - libvirt-daemon-kvm
   - libguestfs-tools
   - libvirt-client
   - qemu-kvm
   - nfs-utils
   - libvirt-daemon
   - libvirt-client
   - virt-top
   - tuned
   - openssh-server
   - wget
   - git
   - net-tools
   - bind-utils
   - yum-utils
   - iptables-services
   - bridge-utils
   - bash-completion
   - kexec-tools
   - sos
   - psacct
   - vim
   - pyOpenSSL
   - device-mapper-event-libs
   - device-mapper-libs
   - httpd-tools
   - java-1.8.0-openjdk-devel.x86_64
   - tmux
   - python-dns

# used in playbook setup_kvmhost.yml
network_interface_name: "{{ kvm_host_interface }}"

##############################
# Required for OpenShift/OKD #
##############################

inventory_destination: "{{ inventory_dir }}"
glusterfs: True
htpasswd_file_path: "{{ inventory_dir }}/passwordFile"
openshift_pool_id: ""
openshift_release: "3.11"
openshift_image_tag: v3.11.141
openshift_pkg_version: -3.11.141
openshift_deployment_type: "{{ openshift_product | default('openshift-enterprise') }}"
glusterfs_block_host_vol_size: "{{ glusterfs_vol_size | default('150') }}"
metrics_storage_volume_size: 10Gi

# Feature
enable_firewalld: False
enable_openshift_operators: True
enable_metrics: True
enable_logging: False
enable_prometheous_operator: False




##################
# OpenShift/OKD #
#################
dns_wildcard: "*.apps"

###########################
# General Networking Info #
###########################

####################
## VM Network Info
##-------------------
## Currently we assume the VMs will use the name network as the host
## This is why a bridge network is created by default. These values
## can be changed to reflect a different network.
vm_net_gateway: "{{ kvm_host_gw }}"
vm_net_netmask: "{{ kvm_host_netmask }}"


###########################
# these should be deleted #
# #########################

# KVM host packages
qubi_required_pkgs: |
   "virt-install, libvirt-daemon-config-network, libvirt-daemon-kvm,
   libguestfs-tools, libvirt-client, qemu-kvm, nfs-utils, libvirt-daemon,
   libvirt-client, virt-top, cockpit, cockpit-networkmanager, cockpit-dashboard,
   cockpit-storaged, cockpit-packagekit, cockpit-machines, cockpit-sosreport,
   cockpit-kubernetes, cockpit-pcp, cockpit-bridge, tuned, openssh-server,
   wget, git, net-tools, bind-utils, yum-utils, iptables-services, bridge-utils,
   bash-completion, kexec-tools, sos, psacct, vim, atomic-openshift-clients, ansible,
   pyOpenSSL, docker, device-mapper-event-libs, device-mapper-libs, httpd-tools,
   java-1.8.0-openjdk-devel.x86_64, tmux, patch, openshift-ansible, python-netaddr"


## OCP4
cluster_name: ocp42
public_domain: poc.lunchnet.example 
