# KVM host packages
libvirt_pkgs:
   - virt-install
   - libvirt-daemon-config-network
   - libvirt-daemon-kvm
   - libguestfs-tools
   - libvirt-client
   - qemu-kvm
   - nfs-utils
   - libvirt-daemon
   - libvirt-client
   - virt-top
   - tuned
   - openssh-server
   - wget
   - git
   - net-tools
   - bind-utils
   - yum-utils
   - iptables-services
   - bridge-utils
   - bash-completion
   - kexec-tools
   - sos
   - psacct
   - vim
   - pyOpenSSL
   - device-mapper-event-libs
   - device-mapper-libs
   - httpd-tools
   - java-1.8.0-openjdk-devel.x86_64
   - tmux
   - patch

libvirt_services:
  - libvirtd
  - tuned

# This hash defines all the libvirt networks that should be created
# The example below defines a bridge and nat network.
# The bridge network is needed for ocp3 installs, IdM and anything else that needs direct
# access to the host network.
# The nat network is primarly for OCP4. Perhaps it will be use for other things in the furture.
# If there are other types of networks you want to support, make sure
# to create the associated libvirt network xml template

## OCP4
cluster_name: ocp42
public_domain: "{{ domain }}"


nat_network_name: "{{ cluster_name }}"
libvirt_host_networks:
  - name: "{{ nat_network_name }}"
    create: true
    mode: nat
    int_domain: "{{ public_domain }}"
    external_domain: "{{ public_domain }}"
    mac_start: "52:54:00:"
    master_count: 3
    compute_count: 2
    subnet: "192.168.50.0"
    mask: "255.255.255.0"
  - name: "{{ vm_libvirt_net }}"
    create: true
    mode: bridge
    bridge_device: "{{ kvm_host_bridge_name | default(qubinode_bridge_name) }}"
    ifcfg_type: "{{ kvm_bridge_type }}"
    ifcfg_bootproto: "{{ kvm_host_bootproto }}"
    bridge_slave_dev: "{{ kvm_host_interface }}"
    gateway: "{{ kvm_host_gw }}"
    mask_prefix: "{{ kvm_host_mask_prefix }}"
    ipaddress: "{{ kvm_host_ip }}"
    mac: "{{ kvm_host_macaddr }}"


#This is for KVM host initial setup of /etc/resolv.conf
kvm_host_ip: ""
kvm_host_interface: ""
kvm_host_gw: ""
kvm_host_macaddr: ""
kvm_bridge_type: "Bridge"
kvm_host_bootproto: ""
kvm_host_mask_prefix: ""
ssh_username: ""
kvm_host_domain: "lab.example"
kvm_host_dns_server: "{{ idm_server_ip | default('1.1.1.1') }}"
dns_servers:
  - "{{ dns_server }}"
  - "8.8.8.8"
network_interface_name: eno1

kvm_host_libvirt_dir: /var/lib/libvirt/images
host_device: nvme0n1
vg_name: vg_qubi
qubinode_bridge_name: qubibr0

libvirt_host_storage_pools:
  - name: default
    state: active
    autostart: yes
    path: "{{ kvm_host_libvirt_dir }}"

# set to false to skip creating a bridge interface
configure_bridge: false
